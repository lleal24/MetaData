/*
 * Observaciones de Codigo:
 * FileChooser: es una clase java que nos permite mostrar fácilmente una ventana para la selección de un fichero
 * Para diferenciar las extenciones se uso el concepto de Expresiones regulares en java
 * https://www.youtube.com/watch?v=_uNtV-BaU0g
 */
package metadata;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileSystemView;

/**
 *
 * @author user
 */
public class Vista extends javax.swing.JFrame {

    /**
     * Creates new form Vista
     */
    public Vista() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Meta Data");

        jButton1.setText("Seleccionar archivo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Meta Data");

        jLabel2.setText("Vista Previa");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(38, 38, 38))
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(116, 116, 116))
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //metodo que carga la ventana para seleccionar archivo
        JFileChooser file = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
        //Dialogo que permite mostrar la ventana para seleccionar el archivo.
        file.showOpenDialog(file);
        
        //crear variable tipo File que obtiene el archivo seleccionado
        File archivo = file.getSelectedFile();
        
        //variables para obtener la metadata deseada
        String nombre = archivo.getName();
        String ruta = archivo.getPath();
        Boolean leer = archivo.canRead();
        Boolean escribir = archivo.canWrite();
        long tamaño = archivo.length();        
        
        
        //Area de vista previa del archivo
        try {
            FileReader fr = new FileReader (archivo);
            BufferedReader br = new BufferedReader(fr);
            String contenido = br.readLine();
            
            //Expresiones regulares para encontar patron en una lista de caracteres
            //Clase pattern = representacion compilada de una expresion regular define lo que se va a evaluar
            Pattern ext1 = Pattern.compile(".*(txt)$");
            //Objeto Matcher define la variable o cadena que queremos evaluar Devuelve un valor Booleano
            Matcher txt = ext1.matcher(nombre);
            Pattern ext2 = Pattern.compile(".*(png)$");
            Matcher png = ext2.matcher(nombre);
            Pattern ext3 = Pattern.compile(".*(pdf)$");
            Matcher pdf = ext3.matcher(nombre);
            if (txt.matches()== true)
            {
                System.out.println("Archivo de texto");
            }
            else if (png.matches()==true){
                System.out.println("Archivo imagen png");                
            }
            else if (pdf.matches()==true){
                System.out.println("Archivo PDF"); 
            } else{
                System.out.println("Extencion NO soportada"); 
            }
            
            //System.out.println(m.matches());
            
            while(contenido !=null){
               //metodo append = sirve para concatenar otra cadadena de caracteres al final de otra
               //con el metodo set solamente muestra la primer linea
               jTextArea2.append(contenido+"\n");
               //System.out.println(contenido);
               contenido = br.readLine();
            }
                       
            
        } catch (FileNotFoundException ex) {
            System.out.println("Error fichero no encontrado");
        } catch (IOException ex) {
            
        }
        
        //Area de impresion de Metadata
        jTextArea1.setText("Nombre de archivo: "+nombre+"\n"+
                "Ubicacion: "+ruta+"\n"    
                +"Tamaño: "+tamaño+" bytes\n"
                +"Se puede leer: "+leer+"\n"
                +"Se puede escribir: "+escribir+"\n");
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Vista().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    // End of variables declaration//GEN-END:variables
}
